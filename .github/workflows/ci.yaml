name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "*.rst"

  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "*.rst"

jobs:
  pre-commit:
    name: Run pre-commit
    # This is the VM in which github run
    # We can use a custom container that will
    # be run in this VM
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache python environment
        uses: actions/cache@v3
        # https://tobiasmcnulty.com/posts/caching-pre-commit/
        # This restore and/or save in the same action
        with:
          path: ~/.cache/pip
          key: ${{"{{"}} runner.os {{"}}"}}-python-3.10-venv-${{"{{"}} hashFiles('pyproject.toml') {{"}}"}}

      - name: Install dependencies
        run: |
          pip install -r requirements/requirements-dev.txt

      - name: Cache pre-commits
        id: cache-pre-commits
        # https://tobiasmcnulty.com/posts/caching-pre-commit/
        # This restore and/or save in the same actions
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{"{{"}} hashFiles('.pre-commit-config.yaml') {{"}}"}}

      - name: Install pre-commits
        # https://github.com/actions/cache#restoring-and-saving-cache-using-a-single-action
        if: steps.cache-pre-commits.outputs.cache-hit != 'true'
        run: pre-commit install

      - name: Compute pre-commit cache key
        run: |
          pre-commit run --all-files

  linux-tests:
    name: Tests for Python 3.10 on ubuntu-latest
    runs-on: ubuntu-latest
    needs: pre-commit
    # If not default branch
    # It allows us to not use too much walltime of github
    env:
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache python environment
        uses: actions/cache@v3
        # https://tobiasmcnulty.com/posts/caching-pre-commit/
        # This restore and/or save in the same action
        with:
          path: ~/.cache/pip
          key: ${{"{{"}} runner.os {{"}}"}}-python-3.10-pip-${{"{{"}} hashFiles('pyproject.toml') {{"}}"}}

      - name: Install dependencies
        run: |
          cd raw2l1
          pip install -r requirements/requirements-dev.txt

      - name: Run tests
        run: |
          python -m pytest

      # - name: Upload artifacts generated by tests
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: tests-artifacts
      #     path: tests/data/outputs/

      - name: Upload coverage data
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: "./coverage/"

  coverage:
    name: Coverage deployment
    runs-on: ubuntu-latest
    needs: linux-tests
    # Only deploy coverage on default branch
    if: ( github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ) || startsWith(github.ref, 'refs/tags')
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
          path: ./coverage/

      - name: Display structure of downloaded files
        run: ls -lh --color=auto -R

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.0
        with:
          directory: ./coverage/
          fail_ci_if_error: true
          files: coverage.xml
          verbose: true
